
data_string= """
Best Route:
[V3] 50.00% = ARB -- 0.3% [0x59354356Ec5d56306791873f567d61EBf11dfbD5] --> WETH -- 0.05% [0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640] --> USDC -- 0.01% [0x3416cF6C708Da44DB2624D63ea0AAef7113527C6] --> USDT, [V3] 45.00% = ARB -- 1% [0x755E5A186F0469583bd2e80d1216E02aB88Ec6ca] --> WETH -- 0.05% [0x11b815efB8f581194ae79006d24E0d814B7697F6] --> USDT, [V3] 5.00% = ARB -- 1% [0x42eAC65B1cAa73e9D06584708ef2c0642b9AC559] --> USDC -- 0.05% [0x7858E59e0C01EA06Df3aF3D20aC7B0003275D4Bf] --> USDT
        Raw Quote Exact In:
                291700.22
        Gas Adjusted Quote In:
                291688.06

Gas Used Quote Token: 12.159097
Gas Used USD: 39.032097
Calldata: 0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000009184e72a000000000000000000000000000000000000000000000000000000000000000000400000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000069e10de76676d080000000000000000000000000000000000000000000000000000000000027769820e900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000059b50721bcf8d664c30412cfbc6cf7a15145234ad1000bb8c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20001f4a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000064dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000005f4a8c8375d15540000000000000000000000000000000000000000000000000000000000019318e5e3700000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000042b50721bcf8d664c30412cfbc6cf7a15145234ad1002710c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20001f4dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000a968163f0a57b400000000000000000000000000000000000000000000000000000000000000699b9b800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000042b50721bcf8d664c30412cfbc6cf7a15145234ad1002710a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480001f4dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b00000000000000000000000000000000000000000000000000000040aec038d9
Value: 0x00

  blockNumber: "18406865"
  estimatedGasUsed: "1961000"
  gasPriceWei: "12229225313"
Total ticks crossed: 45"""


def extract_key_values(data):
    # Split by newlines and filter out empty lines
    lines = [line.strip() for line in data.split('\n') if line.strip()]

    result = {}

    for line in lines:
        # Check if line contains a colon, indicating a key-value pair
        if ':' in line:
            key, value = line.split(':', 1)
            result[key.strip()] = value.strip()

    return result


parsed_data = extract_key_values(data_string)
print(parsed_data)