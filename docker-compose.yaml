version: "3.8"

volumes:
  kv_db_data:
  message_broker_data:

x-common-docker-image: &common-docker-image
  image: common-docker-image
  build:
    context: .
    dockerfile: ./Dockerfile

services:
  price_parser_binance:
    <<: *common-docker-image
    command: ["python", "-m", "price_parser_binance"]
    container_name: price_parser_binance
    restart: unless-stopped
    environment:
      SETTINGS_DB__DSN : ${SETTINGS_DB__DSN}
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
    depends_on:
      - message_broker
      - kv_db


  last_price_api:
    <<: *common-docker-image
    command: ["python", "-m", "last_price_api"]
    container_name: last_price_api
    restart: unless-stopped
    environment:
      LAST_PRICE_API_PORT: ${LAST_PRICE_API_PORT}
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
      SETTINGS_DB__DSN : ${SETTINGS_DB__DSN}
    depends_on:
      - message_broker
      - kv_db


  management_api:
    <<: *common-docker-image
    command: ["python", "-m", "management_api"]
    container_name: management_api
    restart: unless-stopped
    environment:
      SETTINGS_DB__DSN : ${SETTINGS_DB__DSN}
      MANAGEMENT_API_PORT : ${MANAGEMENT_API_PORT}
      LAST_PRICE_API_URL: ${LAST_PRICE_API_URL}
    healthcheck:
      test: [ "CMD", "python", "healthcheck.py" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - kv_db


  tg_bot_management:
    volumes:
      - ${PWD}/.var/users:/docker_app/.var/users
    <<: *common-docker-image
    command: ["python", "-m", "tg_bot_management"]
    #container_name: tg_bot_management
    restart: unless-stopped
    environment:
      MANAGEMENT_API_URL: ${MANAGEMENT_API_URL}

      TELEGRAM_BOT_PASSWORD: ${TELEGRAM_BOT_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      SYNC_DB__DSN : ${NOTIFIER_SYNC_DB__DSN}

      DB_PATH: ""
    depends_on:
      - management_api


  tg_bot_notifier:
    volumes:
      - ${PWD}/.var/users:/docker_app/.var/users
    <<: *common-docker-image
    command: ["python", "-m", "tg_bot_notifier"]
    container_name: tg_bot_notifier
    restart: unless-stopped
    environment:
      TELEGRAM_BOT_PASSWORD: ${TELEGRAM_BOT_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
      SYNC_DB__DSN : ${NOTIFIER_SYNC_DB__DSN}
      SETTINGS_DB__DSN: ${SETTINGS_DB__DSN}
      DB_PATH: ""
    depends_on:
      - message_broker

  price_parser_uniswap_v2:
    <<: *common-docker-image
    command: [ "python", "-m", "price_parser_uniswap_v2" ]
    #    container_name: path_parser_uniswap
    restart: unless-stopped
#    deploy:
#      replicas: 3
    environment:
      MESSAGE_BROKER__DSN: ${MESSAGE_BROKER__DSN}
      JSON_RPC_PROVIDER: ${JSON_RPC_PROVIDER}
      SETTINGS_DB__DSN: ${SETTINGS_DB__DSN}
      SYNC_DB__DSN: ${SYNC_DB__DSN}
    depends_on:
      - kv_db
      - message_broker

  kv_db:
    image: 'redislabs/redismod'
    volumes:
      - kv_db_data:/.var
    container_name: kv_db
    restart: unless-stopped
#    ports:
#      - "6379:6379"

#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    image: ghcr.io/joeferner/redis-commander:latest
#    build: .
#    restart: always
#    environment:
#      - REDIS_HOSTS=local:kv_db:6379
#    ports:
#      - "8081:8081"

  message_broker:
    image: 'rabbitmq:3-management'
    volumes:
      - message_broker_data:/var/lib/rabbitmq
    restart: unless-stopped
    container_name: message_broker
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5672" ]
      interval: 30s
      timeout: 10s
      retries: 5
#    ports:
#      - "15672:15672"
#      - "5672:5672"

  geth:
    user: "${UID}:${GID}"
    image: ethereum/client-go
    pull_policy: always
    container_name: geth
    restart: unless-stopped
#    ports:
#      - 30303:30303
#      - 30303:30303/udp
#      - 8545:8545
#      - 8546:8546
#      - 8551:8551
    volumes:
      - ${PWD}/data/geth:/root/.ethereum
    stop_signal: SIGINT
    stop_grace_period: 2m
    healthcheck:
      test: [ "CMD-SHELL", "geth attach --exec eth.blockNumber" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - --http
      - --http.api=eth,net,web3
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api=eth,net,web3
      - --graphql
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
    logging:
      driver: json-file
      options:
        max-size: 2m
        max-file: "10"

  prysm:
    user: "${UID}:${GID}"
    image: gcr.io/prysmaticlabs/prysm/beacon-chain
    pull_policy: always
    container_name: beacon
    restart: unless-stopped
    stop_grace_period: 2m
    volumes:
      - ${PWD}/data/prysm:/data
      - ${PWD}/data/geth:/geth
    depends_on:
      geth:
        condition: service_healthy
#    ports:
#      - 4000:4000
#      - 3500:3500
    command:
      - --accept-terms-of-use
      - --datadir=/data
      - --execution-endpoint=/geth/geth.ipc
      - --rpc-host=0.0.0.0
      - --rpc-port=4000
      - --grpc-gateway-corsdomain=*
      - --grpc-gateway-host=0.0.0.0
      - --grpc-gateway-port=3500
      - --checkpoint-sync-url=https://checkpointz.pietjepuk.net
    logging:
      driver: json-file
      options:
        max-size: 2m
        max-file: "10"
# regular expression for intelij ---->>>> \= os\.environ\.get\("\w*"\) replace ----->>>>>: \${}