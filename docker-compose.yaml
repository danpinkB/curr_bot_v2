version: "3.8"

volumes:
  kv_db_data:
  message_broker_data:

x-common-docker-image: &common-docker-image
  image: common-docker-image
  build:
    context: .
    dockerfile: ./Dockerfile

services:
  # INDICATOR

  indicator_maker:
    <<: *common-docker-image
    command: ["python", "-m", "indicator_maker"]
    container_name: indicator_maker
    restart: always
    environment:
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
      DB_TG_SETTINGS__DSN : ${DB_TG_SETTINGS__DSN}
      LAST_PRICE_API__PORT: ${LAST_PRICE_API__PORT}
      LOGLEVEL: 'INFO'
    depends_on:
      - message_broker
      - kv_db

  # EXECUTION

  execution_order_api_binance:
    <<: *common-docker-image

  execution_order_api_uniswap:
    <<: *common-docker-image

  # MANAGEMENT

  management_api:
    <<: *common-docker-image
    command: ["python", "-m", "management_api"]
    container_name: management_api
    restart: unless-stopped
    environment:
      LAST_PRICE_API_URL  : ${LAST_PRICE_API_URL}
      DB_TG_SETTINGS__DSN : ${DB_TG_SETTINGS__DSN}
      MANAGEMENT_API_PORT : ${MANAGEMENT_API_PORT}
      LOGLEVEL: 'INFO'
    healthcheck:
      test: [ "CMD", "python", "healthcheck.py" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - kv_db

  # NOTIFIER

  notifier_routing_api:
    <<: *common-docker-image

  notifier_tg_bot:
    volumes:
      - ${PWD}/.var/users:/docker_app/.var/users
    <<: *common-docker-image
    command: ["python", "-m", "notifier_tg_bot"]
    container_name: notifier_tg_bot
    restart: unless-stopped
    environment:
      TELEGRAM_BOT_PASSWORD: ${TELEGRAM_BOT_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
      REDIS_DSN__SYNC : ${REDIS_DSN__SYNC}
      DB_TG_SETTINGS__DSN: ${DB_TG_SETTINGS__DSN}
      DB_PATH: ""
      LOGLEVEL: 'INFO'
    depends_on:
      - message_broker

  # MINER

  miner_price_parser_binance:
    <<: *common-docker-image
    command: ["python", "-m", "miner_price_parser_binance"]
    container_name: miner_price_parser_binance
    restart: unless-stopped
    environment:
      DB_TG_SETTINGS__DSN : ${DB_TG_SETTINGS__DSN}
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
      LOGLEVEL: 'INFO'
    depends_on:
      - message_broker
      - kv_db

  miner_price_parser_uniswap:
    image: price_parser_uniswap
    build:
      context: .
      dockerfile: miner_price_parser_uniswap/Dockerfile
    command: ["python", "-m", "miner_price_parser_uniswap"]
    #container_name: miner_price_parser_uniswap
    restart: unless-stopped
    deploy:
      replicas: 3
    environment:
      JSON_RPC_PROVIDER : ${JSON_RPC_PROVIDER}
      DB_TG_SETTINGS__DSN : ${DB_TG_SETTINGS__DSN}
      DB_PRICE_PARSER_SYNC__DSN : ${DB_PRICE_PARSER_SYNC__DSN}
      LOGLEVEL: 'INFO'
      MESSAGE_BROKER__DSN : ${MESSAGE_BROKER__DSN}
    depends_on:
      - kv_db
      - message_broker

  # COMMON
  kv_db:
    image: 'redislabs/redismod'
    volumes:
      - kv_db_data:/.var
    container_name: kv_db
    restart: unless-stopped
#    ports:
#      - "6379:6379"

  message_broker:
    image: 'rabbitmq:3-management'
    volumes:
      - message_broker_data:/var/lib/rabbitmq
    restart: unless-stopped
    container_name: message_broker
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      LOGLEVEL: 'INFO'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5672" ]
      interval: 30s
      timeout: 10s
      retries: 5

  geth:
    image: ethereum/client-go
    pull_policy: always
    container_name: geth
    restart: unless-stopped
    ports:
      - 30303:30303
      - 30303:30303/udp
      - 8545:8545
      - 8546:8546
      - 8551:8551
    volumes:
      - ${GETH_DATADIR:-/data/geth}:/root/.ethereum
    stop_signal: SIGINT
    stop_grace_period: 2m
    healthcheck:
      test: [ "CMD-SHELL", "geth attach --exec eth.blockNumber" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - --http
      - --http.api=eth,net,web3,engine,admin
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --rpc.gascap=0
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api=eth,net,web3
      - --graphql
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/root/.ethereum/jwt.hex
      - --authrpc.port=8551
      - --txlookuplimit=0
    logging:
      driver: json-file
      options:
        max-size: 2m
        max-file: "10"

  prysm:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain
    pull_policy: always
    container_name: beacon
    restart: unless-stopped
    stop_grace_period: 2m
    volumes:
      - ${PRYSM_DATADIR:-/data/prysm}:/data
      - ${GETH_DATADIR:-/data/geth}:/geth
    depends_on:
      geth:
        condition: service_healthy
    ports:
      - 4000:4000
      - 3500:3500
    command:
      - --accept-terms-of-use
      - --datadir=/data
      - --disable-monitoring
      - --rpc-host=0.0.0.0
      - --execution-endpoint=http://geth:8551
      - --jwt-secret=/geth/jwt.hex
      - --rpc-host=0.0.0.0
      - --rpc-port=4000
      - --grpc-gateway-corsdomain=*
      - --grpc-gateway-host=0.0.0.0
      - --grpc-gateway-port=3500
      - --checkpoint-sync-url=https://checkpointz.pietjepuk.net
    logging:
      driver: json-file
      options:
        max-size: 2m
        max-file: "10"
#    ports:
#      - "15672:15672"
#      - "5672:5672"
# regular expression for intelij ---->>>> \= os\.environ\.get\("\w*"\) replace ----->>>>>: \${}