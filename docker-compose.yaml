version: "3.8"

volumes:
  kv_db_data:
  message_broker_data:

x-common-docker-image: &common-docker-image
  image: common-docker-image
  build:
    context: .
    dockerfile: ./Dockerfile

services:
  price_parser_binance:
    <<: *common-docker-image
    command: ["python", "-m", "price_parser_binance"]
    container_name: price_parser_binance
    restart: unless-stopped
    environment:
      REDIS_DSN__SETTINGS : ${REDIS_DSN__SETTINGS}
      REDIS_DSN__PRICE : ${REDIS_DSN__PRICE}
      RABBITMQ_DSN__SENDER : ${RABBITMQ_DSN__SENDER}
      RABBITMQ_QUE__SENDER: 'price'
    depends_on:
      - message_broker
      - kv_db


  last_price_api:
    <<: *common-docker-image
    command: ["python", "-m", "last_price_api"]
    container_name: last_price_api
    restart: unless-stopped
    environment:
      RABBITMQ_DSN__CONSUMER : ${RABBITMQ_DSN__CONSUMER}
      RABBITMQ_QUE__CONSUMER : 'price'

      RABBITMQ_DSN__SENDER : ${RABBITMQ_DSN__SENDER}
      RABBITMQ_QUE__SENDER : 'notification'

      REDIS_DSN__SETTINGS : ${REDIS_DSN__SETTINGS}
      REDIS_DSN__PRICE : ${REDIS_DSN__PRICE}
    depends_on:
      - message_broker
      - kv_db


  management_api:
    <<: *common-docker-image
    command: ["python", "-m", "management_api"]
    container_name: management_api
    restart: unless-stopped
    environment:
      REDIS_DSN__SETTINGS : ${REDIS_DSN__SETTINGS}
      REDIS_DSN__PRICE : ${REDIS_DSN__PRICE}
      MANAGEMENT_API_PORT : ${MANAGEMENT_API_PORT}

    healthcheck:
      test: [ "CMD", "python", "healthcheck.py" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - kv_db


  tg_bot_management:
    volumes:
      - ${PWD}/.var/users:/docker_app/.var/users
    <<: *common-docker-image
    command: ["python", "-m", "tg_bot_management"]
    #container_name: tg_bot_management
    restart: unless-stopped
    environment:
      MANAGEMENT_API_URI: management_api
      MANAGEMENT_API_PORT: ${MANAGEMENT_API_PORT}

      TELEGRAM_BOT_PASSWORD: ${TELEGRAM_BOT_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}

      DB_PATH: ""
    depends_on:
      - management_api


  tg_bot_notifier:
    volumes:
      - ${PWD}/.var/users:/docker_app/.var/users
    <<: *common-docker-image
    command: ["python", "-m", "tg_bot_notifier"]
    container_name: tg_bot_notifier
    restart: unless-stopped
    environment:
      TELEGRAM_BOT_PASSWORD: ${TELEGRAM_BOT_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}

      RABBITMQ_DSN__CONSUMER : ${RABBITMQ_DSN__CONSUMER}
      RABBITMQ_QUE__CONSUMER: 'notification'

      REDIS_DSN__SYNC : ${REDIS_DSN__SYNC}
      REDIS_DSN__SETTINGS: ${REDIS_DSN__SETTINGS}
      DB_PATH: ""
    depends_on:
      - message_broker


  price_parser_uniswap:
    <<: *common-docker-image
    command: ["python", "-m", "price_parser_uniswap"]
    #container_name: price_parser_uniswap
    restart: unless-stopped
    deploy:
      replicas: 3
    environment:
      JSON_RPC_PROVIDER : ${JSON_RPC_PROVIDER}
      REDIS_DSN__SETTINGS : ${REDIS_DSN__SETTINGS}
      REDIS_DSN__PATH : ${REDIS_DSN__PATH}
      REDIS_DSN__PRICE : ${REDIS_DSN__PRICE}
      REDIS_DSN__SYNC : ${REDIS_DSN__SYNC}
      REDIS_DSN__INFO : ${REDIS_DSN__INFO}

      RABBITMQ_DSN__SENDER : ${RABBITMQ_DSN__SENDER}
      RABBITMQ_QUE__SENDER : 'price'
    depends_on:
      - kv_db
      - message_broker


  kv_db:
    image: 'redislabs/redismod'
    volumes:
      - kv_db_data:/.var
    container_name: kv_db
    restart: unless-stopped
    ports:
      - "6379:6379"


  message_broker:
    image: 'rabbitmq:3-management'
    volumes:
      - message_broker_data:/var/lib/rabbitmq
    restart: unless-stopped
    container_name: message_broker
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5672" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "15672:15672"
      - "5672:5672"
# regular expression for intelij ---->>>> \= os\.environ\.get\("\w*"\) replace ----->>>>>: \${}